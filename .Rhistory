# Libraries ---------------------------------------------------------------
## API calls with R
suppressPackageStartupMessages(library(httr))
## Data wrangling - equivalent to pandas + piping
suppressPackageStartupMessages(library(dplyr, quietly = TRUE))
suppressPackageStartupMessages(library(data.table, quietly = TRUE))
## Json parsinf (fromJson)
suppressPackageStartupMessages(library(jsonlite, quietly = TRUE))
## Functional programming - map, reduce functions
suppressPackageStartupMessages(library(purrr, quietly = TRUE))
## Reading and writing CSV files and other formats (--ditch this if ff solves the problem)
suppressPackageStartupMessages(library(readr, quietly = TRUE))
## Operations with dates
suppressPackageStartupMessages(library(lubridate, quietly = TRUE))
## string manipulation
suppressPackageStartupMessages(library(stringr, quietly = TRUE))
## tidy data
suppressPackageStartupMessages(library(tidyr, quietly = TRUE))
## hash
suppressPackageStartupMessages(library(digest, quietly = TRUE))
## futures!!! - multicore processing
suppressPackageStartupMessages(library(furrr, quietly = TRUE))
library('keboola.r.docker.application')
app <- DockerApplication$new('/data/')
app$readConfig()
app <- DockerApplication$new('/data')
app$readConfig()
app$readConfig()
app <- DockerApplication$new('/data/')
app$readConfig()
app <- DockerApplication$new()
app <- DockerApplication$new('./data')
app$readConfig()
library('keboola.r.docker.application')
app <- DockerApplication$new('./data')
app$readConfig()
user<-app$getParameters()$user
user<-app$getParameters()$user
app$readConfig()
user<-app$getParameters()$user
user
app$getParameters()
user<-app$getParameters()$user
app$configData
library('keboola.r.docker.application')
app <- DockerApplication$new('./data')
app$readConfig()
user<-app$getParameters()$user
app$configData
library('keboola.r.docker.application')
app <- DockerApplication$new('./data')
app$readConfig()
user<-app$getParameters()$user
app$configData
user<-app$getParameters()$properties
